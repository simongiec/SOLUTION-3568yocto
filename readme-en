#  RK3568 Yocto System Introduction

##  1. Board Ports
The ports for this model are shown in the following screenshot:


##  2. SDK Structure Introduction
The directory structure overview of the SDK is shown below:

The SDK directory includes folders like buildroot, debian, app, kernel, u-boot, device, docs, external, and more. Each directory or its subdirectory corresponds to a git project, and commits need to be made within their respective directories.

app: Stores upper application APPs, mainly some application demos.
buildroot: Root filesystem developed based on Buildroot (2021).
debian: Root filesystem developed based on Debian bullseye (11).
device/rockchip: Stores chip board-level configurations and some scripts and files for compiling and packaging firmware.
docs: Stores development guide documents, platform support lists, tool usage documents, Linux development guides, etc.
external: Stores third-party related repositories, including display, audio and video, camera, network, security, etc.
kernel: Stores kernel development code.
output: Stores firmware information, compilation information, XML, host environment, etc. generated each time.
prebuilts: Stores cross-compilation toolchains.
rkbin: Stores Rockchip related binaries and tools.
rockdev: Stores compiled output firmware, actually a soft link to output/firmware.
tools: Stores commonly used tools under Linux and Windows operating systems.
u-boot: Stores U-Boot code developed based on version v2017.09.
yocto: Stores root filesystem developed based on Yocto 4.0.
Yocto Directory Introduction
The Yocto system configuration for RK3568 is in the linux-debian-rk356x/yocto directory, as shown below:

[Image 2: image]

## 3. SDK Environment Configuration and Compilation Introduction
Refer to the official document Rockchip_Developer_Guide_Linux_Software_EN.pdf chapters 6.3 and 8 for detailed environment configuration and compilation. The document link is here.

Development Environment Configuration
We recommend using Ubuntu 22.04 or higher versions for compilation. Other Linux versions may require adjustments to the software packages. Besides system requirements, there are other hardware and software requirements.

Hardware Requirements: 64-bit system, hard disk space greater than 40G. More hard disk space is needed if multiple builds are performed.
Software Requirements: Ubuntu 22.04 or higher versions.
Install the necessary libraries and tools using the following apt-get commands:

sh
复制代码
sudo apt-get update && sudo apt-get install git ssh make gcc libssl-dev \
liblz4-tool expect expect-dev g++ patchelf chrpath gawk texinfo chrpath \
diffstat binfmt-support qemu-user-static live-build bison flex fakeroot \
cmake gcc-multilib g++-multilib unzip device-tree-compiler ncurses-dev \
libgucharmap-2-90-dev bzip2 expat gpgv2 cpp-aarch64-linux-gnu libgmp-dev \
libmpc-dev bc python-is-python3 python2
Compilation Commands
The SDK can be configured and compiled for related functions using the ./build.sh target parameter. Use ./build.sh help to view specific compilation commands. The detailed compilation process is as follows:

Run ./build.sh lunch, select project 5, rockchip_rk3568_evb1_ddr4_v10_defconfig, then enter export RK_ROOTFS_SYSTEM=yocto. After this, you can run ./build.sh all to compile and package all modules (uboot, kernel, rootfs, recovery, etc.) into update.img, or use ./build.sh yocto to compile and generate rootfs.img, which is the Yocto root filesystem.
